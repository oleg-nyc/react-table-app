{"version":3,"sources":["components/Cell.js","components/RowAction.js","models/models.js","components/Row.js","components/RowsPerPage.js","components/TablePagin.js","components/Search.js","components/Table.js","components/TableWrap.js","app.js","index.js","context/TableContext.js","hooks/axios.js","hooks/validators.js"],"names":["ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","getStyles","name","value","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","PhoneMask","React","forwardRef","props","ref","onChange","other","useValidator","mask","definitions","inputRef","onAccept","target","overwrite","text","sx","textAlign","primary","input","handler","handlerBlur","required","invalid","variant","error","onBlur","inputComponent","helpertext","select","enumm","minWidth","disabled","map","key","multiSelect","selected","split","Set","concat","multiple","renderValue","display","flexWrap","gap","length","val","label","uuid","Cell","rowId","opt","type","useState","setValue","useContext","TableContext","tableData","setTableData","_invalid","setInvalid","useAxios","db","table","getItems","useTheme","email","validators","validator","validFun","event","join","rows","item","_id","_edit","enum","_enum","items","data","obj","eval","Options","Component","options","action","icon","mode","RowAction","anchorEl","setAnchorEl","dbTable","addNewItem","updateItem","deleteItem","rowMode","filter","i","_mode","open","Boolean","handleAction","currentTarget","dataset","trim","row","JSON","stringify","_type","snackbar","children","severity","req_err","_required","_addItem","Object","keys","includes","fromEntries","entries","_putItem","_deleteItem","id","a","tableProps","update","del","justifyContent","IconButton","aria-label","aria-controls","undefined","aria-expanded","aria-haspopup","onClick","Menu","MenuListProps","onClose","option","MenuItem","data-value","values","v","models","users","gender","phone","specialties","practice","practices","address","stringToColor","string","hash","charCodeAt","color","toString","substr","Row","fullName","cells","row_names","ListItem","disablePadding","ListItemButton","gridTemplateColumns","Stack","direction","spacing","Avatar","bgcolor","charAt","cell_type","RowsPerPage","tableActions","setTableActions","FormControl","m","InputLabel","Select","labelId","rowPerPage","curPage","TablePagin","Pagination","margin","count","Math","floor","page","Search","TextField","_rows","toLowerCase","fabStyle","position","float","bottom","right","Table","model","row_head","handleSorting","column","d","_sorting","sort","b","columnA","toUpperCase","columnB","useEffect","Box","border","List","dense","ListSubheader","backgroundColor","data-name","textTransform","Fab","index","newRow","reduce","acc","cur","splice","slice","ListItemText","pages","TabPanel","Typography","component","role","hidden","aria-labelledby","p","TableWrap","tab","setTab","handleCloseSnackbar","reason","AppBar","borderRadius","Container","maxWidth","Toolbar","disableGutters","noWrap","mr","flexGrow","Button","newTab","borderBottom","my","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","axis","dir","App","Main","root","document","getElementById","ReactDOM","render","createContext","defaults_props","TableProvider","Provider","list","path","api","callback","axios","get","getItemById","post","newItem","listItem","put","updatedItem","console","delete","el","test","String"],"mappings":"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","file":"static/js/main.65a1abfe.chunk.js","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { ListItemText, Select, MenuItem, Box, Chip, useTheme, Input } from '@mui/material/';\r\nimport { IMaskInput } from 'react-imask';\r\nimport { TableContext } from '../context/TableContext';\r\nimport PropTypes from 'prop-types';\r\nimport useAxios from '../hooks/axios.js';\r\nimport useValidator from '../hooks/validators.js';\r\nimport uuid from 'react-uuid';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction getStyles(name, value, theme) {\r\n    return {\r\n        fontWeight: \r\n        value.indexOf(name) === -1\r\n            ? theme.typography.fontWeightRegular\r\n            : theme.typography.fontWeightMedium,\r\n    };\r\n}\r\n\r\nconst PhoneMask = React.forwardRef(function Mask(props, ref) {\r\n    const { onChange, ...other } = props;\r\n    const [email] = useValidator();\r\n    return (\r\n      <IMaskInput\r\n        {...other}\r\n        mask=\"(#00) 000-0000\"\r\n        definitions={{\r\n          '#': /[1-9]/,\r\n        }}\r\n        inputRef={ref}\r\n        onAccept={(value) => onChange({ target: { name: props.name, value } })}\r\n        overwrite\r\n      />\r\n    );\r\n  });\r\n  \r\n  PhoneMask.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n  };\r\n\r\nconst text = ({value}) => ( <ListItemText sx={{textAlign: 'center'}}  primary={value} /> );\r\n\r\nconst input = ({ name, value, handler, handlerBlur, required, mask, invalid}) => ( <Input\r\n                                            sx={{textAlign: 'center'}} \r\n                                            variant=\"standard\" \r\n                                            name={name} \r\n                                            required={required}\r\n                                            value={value}\r\n                                            error={invalid || false}\r\n                                            onChange={handler}\r\n                                            onBlur={handlerBlur}\r\n                                            inputComponent={mask}\r\n                                            helpertext=\"Incorrect entry.\"\r\n                                        /> );\r\nconst select = ({ name, value, handler, handlerBlur, enumm, required, invalid }) => (\r\n                                            <Select\r\n                                                name={name}\r\n                                                error={invalid || false}\r\n                                                sx={{ minWidth: 120 }}\r\n                                                variant=\"standard\"\r\n                                                value={value || \"\"}\r\n                                                required={required}\r\n                                                onBlur={handlerBlur}\r\n                                                onChange={handler}\r\n                                            >\r\n                                                <MenuItem disabled value=\"\">\r\n                                                    <em>{name}</em>\r\n                                                </MenuItem>\r\n                                                {enumm.map((name) => (\r\n                                                    <MenuItem key={name} value={name}>{name}</MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        );\r\nconst multiSelect = ({ name, value, handler, handlerBlur, enumm, required, theme, invalid }) => {\r\n    const selected = typeof value === 'string' ? (value ? value.split(\", \") : []) : value;\r\n    enumm = [...new Set(enumm.concat(selected))];\r\n    return (\r\n        <Select\r\n            multiple\r\n            sx={{ minWidth: 200 }}\r\n            variant=\"filled\"\r\n            name={name}\r\n            error={invalid || false}\r\n            value={selected}\r\n            required={required}\r\n            onBlur={handlerBlur}\r\n            onChange={handler}\r\n            renderValue={(selected) => (\r\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                    {selected.length === 0 ? <em>{name}</em> : selected.map((val) => (\r\n                                                                                            <Chip key={val} label={val} />\r\n                                                                                        ))}\r\n                </Box>\r\n            )}\r\n            MenuProps={MenuProps}\r\n        >\r\n            <MenuItem disabled value=\"\">\r\n                <em>{name}</em>\r\n            </MenuItem>\r\n            {enumm.length && enumm.map((name) => (\r\n                <MenuItem\r\n                    key={uuid()}\r\n                    value={name}\r\n                    style={getStyles(name, selected, theme)}\r\n                >\r\n                {name}\r\n                </MenuItem>\r\n            ))}\r\n        </Select>\r\n    )\r\n};\r\n\r\nexport default function Cell({rowId, val, name, opt, type}) {\r\n    const [value, setValue] = useState(val);\r\n    const [tableData, setTableData] = useContext(TableContext);\r\n    const [invalid, setInvalid] = useState(!!tableData._invalid && !!tableData._invalid[rowId] && !!tableData._invalid[rowId][name]);\r\n    const [getItems] = useAxios([], opt.db && (opt.db.table || \"\"));\r\n    const theme = useTheme();\r\n    const [email] = useValidator();\r\n    const validators = {};\r\n    validators.email = email;\r\n\r\n    const handler = ({target}) => {\r\n        let required = !!opt.required && !target.value.length;\r\n        if (opt.validator) {\r\n            let validFun = validators[opt.validator];\r\n            if (typeof validFun === 'function') {\r\n                setInvalid(required || !validFun(target.value));\r\n            } \r\n        } else {\r\n            setInvalid(required);\r\n        }\r\n        setValue(target.value);\r\n    }\r\n\r\n    const handlerBlur = (event) => {\r\n            let val = typeof event.target.value === \"string\" ? event.target.value : event.target.value.join(\", \");\r\n            let  rows = tableData.rows.map(item => item._id === rowId ? { ...item, _edit: {...item._edit,[name]: val }} : item);\r\n\r\n            if (typeof tableData._invalid === 'undefined') {\r\n                tableData._invalid = {};\r\n            }\r\n\r\n            if (typeof tableData._invalid[rowId] === 'undefined') {\r\n                tableData._invalid[rowId] = {};\r\n            }\r\n\r\n            tableData.rows = rows;\r\n            tableData._invalid[rowId][name] = !!invalid;\r\n            setTableData(tableData);\r\n    }\r\n\r\n    let enumm = [];\r\n    if (type !== \"text\") {\r\n        if (typeof opt.enum === \"string\") {\r\n            switch (opt.enum) {\r\n                case \"fromDB\":\r\n                    if (!tableData._enum || !tableData._enum[opt.db.table]) {\r\n                        getItems( (items) => setTableData( (data) => {enumm = items.map(obj => obj[opt.db.key]); return {...data, _enum: {[opt.db.table]: enumm}}}))  \r\n                    } else {\r\n                        enumm = tableData._enum[opt.db.table] \r\n                    }\r\n                    break;\r\n                default: break;\r\n            }\r\n        } else {\r\n            enumm = opt.enum || [];\r\n        }\r\n    }\r\n\r\n    const mask = !!opt.mask ? eval(opt.mask) : '';\r\n    const required = opt.required;\r\n    const Options = { text, input, select, multiSelect };\r\n    const Component = Options[type];\r\n\r\n    return  (\r\n                <Component {...{ name, value, handler, handlerBlur, enumm, required, theme, mask, invalid }} />\r\n            )\r\n}\r\n\r\n","import React, { useState, useContext } from 'react';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport CancelIcon from '@mui/icons-material/Close';\r\nimport uuid from 'react-uuid'\r\nimport { TableContext } from '../context/TableContext';\r\nimport useAxios from '../hooks/axios.js';\r\n\r\nconst options = [\r\n  {action: 'Edit', icon: <EditIcon />, mode: \"view\"},\r\n  {action: 'Save',icon: <SaveIcon />, mode: \"edit\"},\r\n  {action: 'Cancel',icon: <CancelIcon />, mode: \"edit\"},\r\n  {action: 'Delete',icon: <DeleteIcon />, mode: \"view\"}\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nexport default function RowAction({rowId}) {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [tableData, setTableData] = useContext(TableContext);\r\n  const [getItems, addNewItem, updateItem, deleteItem, getItemById] = useAxios(tableData.rows, tableData.dbTable)\r\n  const rowMode = tableData.rows.filter(i => i._id === rowId)[0]._mode;\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = ({currentTarget}) => setAnchorEl(currentTarget);\r\n  const handleClose = () => setAnchorEl(null);\r\n  const handleAction = ({currentTarget}) => {\r\n      let  {value: action} = currentTarget.dataset;\r\n      let rows = {};\r\n      switch (action.trim()) {\r\n        case 'Edit':\r\n            rows = tableData.rows.map(item => item._id === rowId ? { ...item, _mode: \"edit\", _edit: {} } : item)\r\n            setTableData({...tableData, rows: rows})\r\n            break;\r\n        case 'Save':\r\n            let row = tableData.rows.filter(item => item._id === rowId)[0];\r\n            if (JSON.stringify(row._edit) === '{}') {\r\n                rows = tableData.rows.map(item => item._id === rowId \r\n                    ? \r\n                    (item._type === \"new\" ? {} : { ...item, _mode: \"view\", _edit: {} }) \r\n                    : \r\n                    item)\r\n                    .filter(value => JSON.stringify(value) !== '{}');\r\n                setTableData({...tableData, rows: rows, snackbar: { children: 'No edits', severity: 'warning' }})\r\n            } else { //Insert\r\n                let req_err = false;\r\n                if (row._type === \"new\") {\r\n                    tableData._required.map( item => {\r\n                        if (!row._edit[item] || !row._edit[item].trim().length) {\r\n                            setTableData({...tableData, snackbar: { children: `Required feild \"${item}\" is empty`, severity: 'error' }})\r\n                            req_err = true;\r\n                        }\r\n                    })\r\n                    if (!req_err) {\r\n                        _addItem(rowId, row._edit);\r\n                    } \r\n                } else { //Update\r\n                    Object.keys(row._edit).map( item => {\r\n                        if (tableData._required.includes(item) && !row._edit[item].trim().length) {\r\n                            row._edit[item] = null;\r\n                            rows = tableData.rows.map(item => item._id === rowId \r\n                                ? \r\n                                { ...item, _edit: Object.fromEntries(Object.entries(item._edit).filter(([name, value]) => value !== null ))}\r\n                                : \r\n                                item);\r\n                            setTableData({...tableData, rows: rows, snackbar: { children: `Required feild \"${item}\" is empty`, severity: 'error' }})\r\n                            req_err = true;\r\n                        }\r\n                    })\r\n                    if (!req_err) {\r\n                        _putItem(rowId)\r\n                    } \r\n                }\r\n            }\r\n            break;\r\n        case 'Cancel':\r\n            rows = tableData.rows.map(item => item._id === rowId \r\n                                            ? \r\n                                            (item._type === \"new\" ? {} : { ...item, _mode: \"view\", _edit: {} }) \r\n                                            : \r\n                                            item)\r\n                    .filter(value => JSON.stringify(value) !== '{}');\r\n            setTableData({...tableData, rows: rows, snackbar: { children: 'Canceled', severity: 'success' }})\r\n            break;\r\n        case 'Delete':\r\n            _deleteItem(rowId)\r\n            break;\r\n        default: break;\r\n      }\r\n      setAnchorEl(null);\r\n  }\r\n\r\n  const _addItem = async (id, item) => {\r\n    addNewItem(id, item, (items, error) => {\r\n        setTableData( {...tableData, rows: items} );\r\n        if (error) {\r\n            setTableData( (tableProps) => {return {...tableProps, snackbar: { children: 'Saved', severity: 'error' }}});\r\n        } else {\r\n            setTableData( (tableProps) => {return {...tableProps, snackbar: { children: 'Saved', severity: 'success' }}});\r\n        }\r\n    })\r\n  }\r\n\r\n  const _putItem = async (id) => {\r\n    updateItem(id, (update, error) => {\r\n        setTableData( (tableProps) => {return {...tableProps, rows: update}});\r\n        if (error) {\r\n            setTableData((tableProps) => {return {...tableProps, snackbar: { children: 'Updated', severity: 'error' }}});\r\n        } else {\r\n            setTableData((tableProps) => {return {...tableProps, snackbar: { children: 'Updated', severity: 'success' }}});\r\n        }\r\n    });\r\n  };\r\n\r\n  const _deleteItem = async (id) => {\r\n    deleteItem(id, (del, error) => {\r\n        setTableData( (tableProps) => {return {...tableProps, rows: del}});\r\n        if (error) {\r\n            setTableData((tableProps) => {return {...tableProps, snackbar: { children: 'Deleted', severity: 'error' }}});\r\n        } else {\r\n            setTableData((tableProps) => {return {...tableProps, snackbar: { children: 'Deleted', severity: 'success' }}});\r\n        }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{justifyContent: 'center', display: 'flex'}}>\r\n      <IconButton\r\n        aria-label=\"more\"\r\n        id=\"long-button\"\r\n        aria-controls={open ? 'long-menu' : undefined}\r\n        aria-expanded={open ? 'true' : undefined}\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        MenuListProps={{\r\n          'aria-labelledby': 'long-button',\r\n        }}\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: '20ch',\r\n          },\r\n        }}\r\n      >\r\n        {options.map((option) => (\r\n          <MenuItem \r\n            key={uuid()} \r\n            selected={option === 'Pyxis'} \r\n            data-value={option.action} \r\n            onClick={rowMode === option.mode ? handleAction : ()=>{}} \r\n            disabled={rowMode !== option.mode || (option.action === 'Save' && !!tableData._invalid && !!tableData._invalid[rowId] && !!Object.values(tableData._invalid[rowId]).filter(v => v).length)}>\r\n            {option.icon} {option.action} \r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}","\r\n\r\nexport default function models(name) {\r\n  const models = {\r\n    users: {\r\n      name: { type: 'input', required: true },\r\n      gender: { type: 'select', enum: ['Male', 'Female'] },\r\n      email: { type: 'input', required: true, validator: 'email' },\r\n      phone: { type: 'input', mask: 'PhoneMask' },\r\n      specialties: { type: 'input' },\r\n      practice: { type: 'multiSelect', enum: 'fromDB', db: {table: 'practices', key: 'name'} }\r\n    },\r\n    practices: {\r\n      name: { type: 'input', required: true },\r\n      address: { type: 'input' },\r\n      email: { type: 'input', required: true },\r\n      phone: { type: 'input' },\r\n      type: { type: 'input' }\r\n    }\r\n  }\r\n\r\n  return models[name];\r\n}","import React, {useContext} from 'react';\r\nimport { TableContext } from '../context/TableContext';\r\nimport uuid from 'react-uuid'\r\nimport { ListItemButton, ListItem } from '@mui/material/';\r\nimport Cell from './Cell.js';\r\nimport RowAction from './RowAction.js';\r\nimport models from '../models/models.js';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nfunction stringToColor(string) {\r\n  let hash = 0;\r\n  let i;\r\n\r\n  /* eslint-disable no-bitwise */\r\n  for (i = 0; i < string.length; i += 1) {\r\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  let color = '#';\r\n\r\n  for (i = 0; i < 3; i += 1) {\r\n    const value = (hash >> (i * 8)) & 0xff;\r\n    color += `00${value.toString(16)}`.substr(-2);\r\n  }\r\n  /* eslint-enable no-bitwise */\r\n\r\n  return color;\r\n}\r\n\r\nfunction stringAvatar(name) {\r\n  return {\r\n    sx: {\r\n      bgcolor: stringToColor(name),\r\n    },\r\n    children: name ? name.charAt(0)+name.charAt(1) : \"\",\r\n  };\r\n}\r\n\r\nexport default function Row({ row, fullName }) {\r\n\r\n    const [tableData] = useContext(TableContext);\r\n    const cells = models(tableData.dbTable);\r\n    const row_names = Object.keys(cells);\r\n\r\n    return (\r\n            <ListItem disablePadding >\r\n                    <ListItemButton                 \r\n                        sx={{\r\n                            display: 'grid',\r\n                            gap: 1,\r\n                            gridTemplateColumns: `repeat(${row_names.length + 2}, 1fr)`,\r\n                        }}>\r\n                        <Stack direction=\"row\" spacing={2} sx={{justifyContent: 'center'}} >\r\n                            <Avatar {...stringAvatar(fullName || \"\")} />\r\n                        </Stack>\r\n                        {row_names.map(name => {\r\n                                let cell_type = row._mode === \"edit\" ? cells[name].type : \"text\";\r\n                                return (\r\n                                        <Cell \r\n                                            key={uuid()} \r\n                                            name={name} \r\n                                            val={row._mode === \"edit\" ? (typeof row._edit[name] !== 'undefined' ? row._edit[name] : (row[name] || \"\")) : (row[name] || \"N/A\")} \r\n                                            type={cell_type} \r\n                                            opt={cells[name]}\r\n                                            rowId={row._id}\r\n                                        />\r\n                                        )\r\n                        })}  \r\n                        <RowAction rowId={row._id} />              \r\n                    </ListItemButton>\r\n            </ListItem>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { TableContext } from '../context/TableContext';\r\nimport { Select, MenuItem, FormControl, InputLabel } from '@mui/material';\r\n\r\nexport default function RowsPerPage() {\r\n    const [tableActions, setTableActions] = useContext(TableContext);\r\n    const handleChangeRows = ({target}) => setTableActions( (tableProps) => {return {...tableProps, rowPerPage: target.value, curPage: 1}});\r\n    return (\r\n        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 50, textAlign: 'center' }}>\r\n        <InputLabel id=\"row-label\">Rows per pag</InputLabel>\r\n        <Select\r\n            name=\"rows\"\r\n            labelId=\"row-label\"\r\n            label=\"Rows per page\"\r\n            value={tableActions.rowPerPage}\r\n            required\r\n            onChange={handleChangeRows}\r\n        >\r\n            <MenuItem value={5}>5 rows</MenuItem>\r\n            <MenuItem value={10}>10 rows</MenuItem>\r\n            <MenuItem value={20}>20 rows</MenuItem>\r\n            <MenuItem value={50}>50 rows</MenuItem>\r\n        </Select>\r\n        </FormControl>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { TableContext } from '../context/TableContext';\r\nimport { Pagination } from '@mui/material';\r\n\r\nexport default function TablePagin() {\r\n    const [tableData, setTableData] = useContext(TableContext);\r\n    const handleChangePage = (event, value) => setTableData( (tableProps) => {return {...tableProps, curPage: value}});\r\n    return (\r\n        <Pagination \r\n            sx={{\r\n                    display: 'flex', \r\n                    gap: 1,\r\n                    justifyContent: 'center', \r\n                    m: 2\r\n                }} \r\n            spacing={2} \r\n            margin=\"dense\" \r\n            count={Math.floor(tableData.rows.length/tableData.rowPerPage) + (tableData.rows.length%tableData.rowPerPage ? 1 : 0)}\r\n            variant=\"outlined\" \r\n            color=\"primary\" \r\n            onChange={handleChangePage}\r\n            page={tableData.curPage}\r\n        />\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { TextField } from '@mui/material/';\r\nimport { TableContext } from '../context/TableContext';\r\n\r\n\r\nexport default function Search() {\r\n    const [tableData, setTableData] = useContext(TableContext);\r\n    const handleSearch = ({target}) => {\r\n        setTableData( (data) => { \r\n            if (!data._rows) {\r\n                data._rows = data.rows;\r\n            }\r\n            data.rows = data._rows.filter(row => Object.values(row).join(\"|\").toLowerCase().includes(target.value.toLowerCase()));\r\n            if ( data.rows.length !==  data._rows.length ) {\r\n                data.curPage = 1;\r\n            }\r\n            if (!target.value) {\r\n                data._rows = false;\r\n            }\r\n            return { ...data }; \r\n        });\r\n    }\r\n    return (\r\n        <TextField \r\n             sx={{ minWidth: 350 }}\r\n            label=\"Search\" \r\n            type=\"search\"\r\n            onChange={handleSearch} \r\n        />\r\n    )\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Box, List, ListItemButton, ListItemText } from '@mui/material';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\nimport useAxios from '../hooks/axios.js';\r\nimport uuid from 'react-uuid';\r\nimport Fab from '@mui/material/Fab';\r\nimport Row from './Row.js';\r\nimport { TableContext } from '../context/TableContext';\r\nimport RowsPerPage from './RowsPerPage.js';\r\nimport TablePagin from './TablePagin.js';\r\nimport models from '../models/models.js';\r\nimport Search from './Search.js';\r\n\r\nconst fabStyle = {\r\n    position: \"sticky\",\r\n    float: \"right\",\r\n    bottom: 16,\r\n    right: 16,\r\n  };\r\n\r\nexport default function Table() {\r\n\r\n  const [tableData, setTableData] = useContext(TableContext);\r\n  const model = models(tableData.dbTable);\r\n  const row_head = Object.keys(model);\r\n  const [getItems] = useAxios(tableData.rows, tableData.dbTable)\r\n  tableData._required = row_head.filter( name => model[name].required );\r\n\r\n  const addNewRow = () => {\r\n    const index = (tableData.curPage - 1) * tableData.rowPerPage;\r\n    const newRow = row_head.reduce((acc, cur) => ({ ...acc, [cur]: \"\" }), {})\r\n    newRow._mode = \"edit\";\r\n    newRow._type = \"new\";\r\n    newRow._id = uuid();\r\n    newRow._edit = {};\r\n    const rows = [...tableData.rows];\r\n    rows.splice(index, 0, newRow);\r\n    setTableData({...tableData, rows: rows});\r\n  };\r\n\r\n  const handleSorting = ({target}) => {\r\n    let  {name: column} = target.dataset;\r\n    let d = !!tableData._sorting && tableData._sorting.column === column ? -1 * tableData._sorting.direction : 1;\r\n    setTableData( {...tableData, rows: [...tableData.rows.sort((a,b) => {\r\n        var columnA = !!a[column] ? a[column].toUpperCase() : \"\"; \r\n        var columnB = !!b[column] ? b[column].toUpperCase() : \"\";\r\n            if(columnA < columnB){\r\n                return -1 * d;\r\n            } else if(columnA > columnB){\r\n                return d;\r\n            } else {\r\n                return 0;\r\n            }\r\n        })], _sorting: { column: column, direction: d }} \r\n    );\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getItems((items) => setTableData( (tableProps) => {return {...tableProps, rows: items, _rows: false, _enum: {}, _sorting: {}}}))\r\n  }, []);\r\n\r\n  // Debug\r\n//   useEffect(() => {\r\n//       if (tableData){\r\n//             console.log(tableData)\r\n//       }\r\n//   }, [tableData]);\r\n\r\n\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n        <div style={{ width: '100%' }}>\r\n        <Box\r\n            sx={{\r\n                \r\n                width: '100%',\r\n                '& .actions': {\r\n                color: 'text.secondary',\r\n                },\r\n                '& .textPrimary': { \r\n                color: 'text.primary',\r\n                },\r\n                border: 0\r\n            }}\r\n            >\r\n            <List dense \r\n                sx={{ \r\n                        width: 1, \r\n                        bgcolor: 'background.paper', \r\n                        justifyContent: 'center',\r\n                    }}\r\n                >   \r\n                <Box\r\n                    sx={{ \r\n                        display: 'flex',\r\n                        justifyContent: 'end',\r\n                    }}\r\n                >\r\n                    <Search />\r\n                </Box>\r\n                <ListSubheader\r\n                    sx={{\r\n                        display: 'grid',\r\n                        gap: 1,\r\n                        gridTemplateColumns: `repeat(${row_head.length + 2}, 1fr)`,\r\n                    }}\r\n                >\r\n                    <RowsPerPage />\r\n                    {row_head.map( name => {\r\n                        return (<ListItemButton key={uuid()} style={{backgroundColor: 'transparent', margin: 'auto'}} data-name={name} onClick={handleSorting} >\r\n                                    <h3 style={{textTransform: 'capitalize'}} data-name={name}>{name}</h3>\r\n                                    {!!tableData._sorting && !!tableData._sorting.column && tableData._sorting.column === name \r\n                                        ? \r\n                                        (tableData._sorting.direction === -1 ? <ArrowDropDownIcon data-name={name} /> : <ArrowDropUpIcon data-name={name} />) \r\n                                        : ''}\r\n                                </ListItemButton>)\r\n                   })}  \r\n                   <div style={{margin: 'auto'}}>\r\n                        <Fab  sx={fabStyle} aria-label='Add' color='primary' onClick={addNewRow}>\r\n                            <AddIcon />\r\n                        </Fab>\r\n                    </div>\r\n                    \r\n                </ListSubheader>\r\n                {\r\n                    tableData.rows.length \r\n                        ?\r\n                    tableData.rows.slice((tableData.curPage - 1)*tableData.rowPerPage, tableData.curPage*tableData.rowPerPage).map((row) => {\r\n                        return ( \r\n                                <Row key={uuid()} row={row} fullName={row.name}/>\r\n                            )\r\n                        })\r\n                    : <ListItemText sx={{textAlign: 'center'}}  primary=\"No data in table\" />\r\n                }\r\n            </List>\r\n            {tableData.rows.length ? <TablePagin /> : \"\"}    \r\n        </Box>\r\n        </div>\r\n    </div>\r\n  );\r\n} \r\n\r\n\r\n","import React, { useState, useContext } from 'react';\r\nimport { TableContext } from '../context/TableContext';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {Snackbar, Alert} from '@mui/material';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport Button from '@mui/material/Button';\r\nimport Table from './Table.js';\r\n\r\nconst pages = ['Doctors', 'Practices'];\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`action-tabpanel-${index}`}\r\n        aria-labelledby={`action-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n  \r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\n  export default function TableWrap() {\r\n    const theme = useTheme();\r\n    const [tab, setTab] = useState(0);\r\n    const [tableData, setTableData] = useContext(TableContext);\r\n    const handleCloseSnackbar = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setTableData((tableProps) => {return {...tableProps, snackbar: null}});\r\n    }\r\n    const handleSwitchTable = (newTab) => (event) => {\r\n      if (newTab !== tab) {\r\n        setTab(newTab);\r\n        switch (newTab) {\r\n          case 0:\r\n            setTableData({...tableData, dbTable: \"users\", rowPerPage: 5, rows: [], curPage: 1});\r\n            break;\r\n          case 1:\r\n            setTableData({...tableData, dbTable: \"practices\", rowPerPage: 5, rows: [], curPage: 1});\r\n            break;\r\n          default: break;\r\n        }\r\n      }\r\n    };\r\n  return (\r\n      <>\r\n    <AppBar position=\"static\" sx={{ borderRadius: \"10px\" }}>\r\n      <Container maxWidth=\"xl\">\r\n          <Toolbar disableGutters>\r\n            <Typography\r\n                variant=\"h6\"\r\n                noWrap\r\n                component=\"div\"\r\n                sx={{ mr: 2, display: 'flex' }}\r\n            >\r\n            Management APP\r\n            </Typography>\r\n            <Box sx={{ flexGrow: 1, display: 'flex', justifyContent: 'flex-end'}}>\r\n                {pages.map((page, index) => (\r\n                <Button\r\n                    key={page}\r\n                    selected\r\n                    onClick={handleSwitchTable(index)}\r\n                    sx={{ ...(index === tab && {borderBottom:  2}), my: 2, color: 'white', display: 'block', borderRadius: 0 }}\r\n                >\r\n                    {page}\r\n                </Button>\r\n                ))}\r\n            </Box>\r\n          </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n    {!!tableData.snackbar && (\r\n                <Snackbar open onClose={handleCloseSnackbar} autoHideDuration={3000} anchorOrigin={{vertical:\"top\",horizontal:\"right\"}}>\r\n                    <Alert {...tableData.snackbar} onClose={handleCloseSnackbar} />\r\n                </Snackbar>\r\n            )}\r\n    <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={tab}\r\n    >\r\n        <TabPanel value={tab} index={0} dir={theme.direction}>\r\n            <Table />\r\n        </TabPanel>\r\n        <TabPanel value={tab} index={1} dir={theme.direction}>\r\n            <Table />\r\n        </TabPanel>\r\n    </SwipeableViews>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport TableWrap from './components/TableWrap';\r\nimport { TableProvider } from './context/TableContext';\r\n\r\nfunction App () {\r\n    return (\r\n        <TableProvider>\r\n            <TableWrap />\r\n        </TableProvider>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app.js';\r\nimport './styles/style.scss';\r\n\r\nfunction Main() {\r\n    return (\r\n        <App />\r\n    )\r\n}\r\n\r\nconst root = document.getElementById(\"root\");\r\n\r\nReactDOM.render(<Main />, root);\r\n\r\n","import React, { useState, createContext } from 'react';\r\n\r\nconst TableContext = createContext();\r\n\r\nconst defaults_props = {\r\n\trowPerPage: 5,\r\n\trows: [],\r\n\tcurPage: 1,\r\n\tdbTable: \"users\",\r\n\t_required: {}\r\n}\r\n\r\nconst TableProvider = (props) => {\r\n\t\r\n\tconst [tableActions, setTableActions] = useState(defaults_props);\r\n\t\r\n\treturn(\r\n\t\t<TableContext.Provider value={[tableActions, setTableActions]}>\r\n\t\t\t{props.children}\r\n\t\t</TableContext.Provider>\r\n\t);\r\n}\r\n\r\nexport { TableContext, TableProvider };","import axios from 'axios';\r\n\r\nconst useAxios = (list, path) => {\r\n\r\n// Dev\r\n// const api = `//localhost:3001/api/v1/${path}`\r\n\r\n// Server\r\nconst api = `/api/v1/${path}`\r\n\r\n  const getItems = async (callback) => {\r\n    let items = await axios.get(api);\r\n    callback(items.data.map( row => {row._mode = \"view\"; return row;}))\r\n  };\r\n\r\n  const getItemById = async (id, callback) => {\r\n    let item = await axios.get(`${api}/${id}`);\r\n    callback(item.data)\r\n  };\r\n\r\n  const addNewItem = async (id, item, callback) => {\r\n    let newItem = await axios.post(api, item);\r\n    callback(\r\n        list.map((listItem) => (listItem._id === id ? {...newItem.data, _edit: {}, _mode: \"view\"} : listItem))\r\n      );\r\n  }\r\n\r\n  const updateItem = async(id, callback) => {\r\n    try {\r\n      let item = list.filter((i) => i._id === id)[0] || {};\r\n      if (item._id) {\r\n        let updatedItem = await axios.put(`${api}/${id}`, item._edit);\r\n        let data = updatedItem.data;\r\n        data._edit = {};\r\n        data._mode = \"view\";\r\n        callback(\r\n          list.map((listItem) => (listItem._id === id ? data : listItem))\r\n        );\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  const deleteItem = async (id, callback) => {\r\n    try {\r\n      await axios.delete(`${api}/${id}`);\r\n      callback(list.filter((el) => el._id !== id));\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  return [getItems, addNewItem, updateItem, deleteItem, getItemById]\r\n}\r\n\r\nexport default useAxios;","\r\nexport default function useValidator() {\r\n  const email = (email) => {\r\n      const re =\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      return re.test(String(email).toLowerCase());\r\n  }\r\n  return [email];\r\n}"],"sourceRoot":""}